name: SKIVORI CI/CD pipeline

on:
  push:
    branches:
      -main

env:  #Declaring environment variables here itself because not to hardcode the script.#
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: raju/rajurepo
  EKS_CLUSTER: <---------> # replace with your cluster 
  

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Build & Upload image to ECR
        uses: appleboy/docker-ecr-action@master
        with:
         access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
         secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         registry: ${{ secrets.REGISTRY }}
         repo: ${{ env.ECR_REPOSITORY }}
         region: ${{ env.AWS_REGION }}
         tags: latest,${{ github.run_number }}
         daemon_off: false
         dockerfile: ./Dockerfile
         context: ./
         
         
#### Deploy the image to existing kubernetes cluster, add variables in github secrets         
#  DeployToEks:
#    needs: build_and_push
#    runs-on: ubuntu-latest
#    steps:
#      - name: Code checkout
#        uses: actions/checkout@v4
#      
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_key }}
#          aws-region: ${{ env.AWS_REGION }}
#
#      - name: Get Kube config file
#        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} -- name ${{ env.EKS_CLUSTER }}
#
#      - name: Print config file   ## which need to removed later for production ##
#        run: cat ~/.kube/config
#      
#      - name: Login to ECR
#        run: kubectl create secret docker-registry regcred --docker-server=$(aws ecr get-login-password)
#
#      - name: Deploy Helm
#        uses: bitovi/github-actions-deploy-eks-helm@v1.2.8
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_key }}
#          aws-region: ${{ env.AWS_REGION }}
#          cluster-name: ${{ env.EKS_CLUSTER }}
#          chart-path: helm/helloworldcharts
#          namesspace: default
#          values: appimage=${{ secrets.REGISTRY }}/${{ env.ECR_REPOSITORY }}, apptag=${{ github.run_number }}
#          name: helloworld-stack

